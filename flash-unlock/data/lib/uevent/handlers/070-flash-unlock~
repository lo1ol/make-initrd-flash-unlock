#!/bin/bash

. /.initrd/initenv
. uevent-sh-functions
. initrd-sh-functions
. rdshell-sh-functions

print_msg()
{
	local msg="$1"
	if plymouth --ping 2> /dev/null
	then
		plymouth display-message --text "$msg"
	else
		echo -e "$msg"
	fi
}

get_pin()
{
	if [ ! -z "$FLASH_PIN" ]
	then
		pin="$FLASH_PIN"
	elif plymouth --ping 2> /dev/null
	then
		rootdelay_pause
		pin=$(plymouth ask-for-password --prompt "Enter pin for Rutoken: ")
		rootdelay_unpause
	else
		rootdelay_pause
		echo -n "Enter pin for Rutoken: "
		read -s pin
		rootdelay_unpause
	fi

	return 0
}

handler()
{
	printf "Trying to unlock %s.\n" "${LOCKED_FLASH_ROOT}"
	pcscd -fd > /var/log/pcscd &
	for i in 3 2 1 0 
	do
		local pin_length r res
		get_pin
		r=$?
		if [ "$r" != "0" ]
		then
			return $r
		fi
		
		pin_length=$(echo -n $pin | wc -m) 
	        pin_length=$(printf "%02X\n" $pin_length)
	        pin=$(echo -n $pin | hexdump -v -e '/1 ":%02X"')

	        res=$(opensc-tool --send-apdu "00:20:00:02:$pin_length$pin" 2>&1)
		
		if [ "$(echo -n "$res" | grep Received)" = "Received (SW1=0x90, SW2=0x00)" ]
        	then
                	break
        	fi
        	        
        	if [ "$i" != "0" ]
        	then
        	        print_msg "Invalid PIN. ($i attempts left)"
			printf 'ERROR(flash-unlock): invalid pin entered\n' >&2
        	else
        	        print_msg --text "No attempts left"
			printf 'ERROR(flash-unlock): no pin code attempts left\n' >&2
        	        sleep 1
        		exit 1
		fi
	done

	opensc-tool --send-apdu 80:53:11:01:04:82:02:02:03
	opensc-tool --send-apdu 80:40:00:00:00

	partprobe "$LOCKED_FLASH_ROOT"

	killall pcscd

	return 0;
}

while ! console_lock; do
        sleep 0.5
done

exec 0</dev/console >/dev/console 2>&1

rc=0
for e in "$eventdir"/flash-unlock.*; do
	[ -f "$e" ] || break
	r=0
	( . "$e"; handler; ) || r="$?"
	case "$r" in
		1) rc=1 ;;
		0) done_event "$e" ;;
	esac
done

console_unlock
exit $rc
